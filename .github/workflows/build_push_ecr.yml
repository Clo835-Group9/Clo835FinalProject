name: Build, Test, and Push to ECR

on:
  push:
    branches:
      - main

jobs:
  build:
    name: CI for WebApp + MySQL
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout Code
    - name: Checkout source code
      uses: actions/checkout@v3

    # Step 2: Configure AWS Credentials
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
        aws-region: us-east-1

    # Step 3: Login to Amazon ECR
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    # Step 4: Build WebApp Image
    - name: Build WebApp Docker image
      run: docker build -t myapp -f Dockerfile .

    # Step 5: Run Unit Test on WebApp
    - name: Smoke Test WebApp
      run: |
        docker run -d -p 8080:81 --name test-app myapp
        sleep 5
        echo "üîç Container logs:"
        docker logs test-app || true
        echo "üåê Testing endpoint..."
        curl --fail http://localhost:8080 || (echo "‚ùå App test failed"; docker ps -a; docker inspect test-app; exit 1)
        docker stop test-app && docker rm test-app

    # Step 6: Tag & Push WebApp Image to ECR
    - name: Tag and Push WebApp image to ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: clo835/webapp
        IMAGE_TAG: app-v0.1
      run: |
        docker tag myapp $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    # Step 7: Build and Push MySQL Image
    - name: Build and Push MySQL Docker image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: clo835/mysql
        IMAGE_TAG: mysql-v0.1
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f Dockerfile_mysql .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

