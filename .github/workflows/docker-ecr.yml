name: Unit Test WebApp and Push Both Images to ECR

on:
 push:
   branches:
      - main

env:
  AWS_REGION: us-east-1
  IMAGE_TAG: app-v0.1
  MYSQL_TAG: mysql-v0.1
  WEBAPP_REPO: clo835/webapp
  MYSQL_REPO: clo835/mysql

jobs:
  test-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Install dependencies
      working-directory: ./app
      run: |
        pip install -r requirements.txt
        pip install pytest

    - name: Run unit tests on Flask app
      working-directory: ./app
      run: pytest test_app.py

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build and push Flask app image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      run: |
        docker build -t myapp -f app/Dockerfile ./app
        docker tag myapp $ECR_REGISTRY/${{ env.WEBAPP_REPO }}:${{ env.IMAGE_TAG }}
        docker push $ECR_REGISTRY/${{ env.WEBAPP_REPO }}:${{ env.IMAGE_TAG }}

    - name: Build and push MySQL image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      run: |
        docker build -t mysql-init -f app/Dockerfile_mysql ./app
        docker tag mysql-init $ECR_REGISTRY/${{ env.MYSQL_REPO }}:${{ env.MYSQL_TAG }}
        docker push $ECR_REGISTRY/${{ env.MYSQL_REPO }}:${{ env.MYSQL_TAG }}
